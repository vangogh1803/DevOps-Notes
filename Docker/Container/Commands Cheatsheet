🐳 Docker Command Cheatsheet
Everything you need to manage containers, images, volumes, networks, and more.

📦 1. Docker Images
docker pull <image>	Download an image from Docker Hub
docker build -t <name>:<tag> .	Build an image from a Dockerfile in the current directory
docker images	List all locally available images
docker rmi <image>	Remove a local image by name or ID

🚀 2. Containers – Run, Manage, Delete
docker run <image>	Create and start a new container
docker run -d <image>	Run container in detached mode (background)
docker run -it <image>	Run container interactively with terminal
docker run --name <name> <image>	Name your container (easier to manage)
docker run -p <host>:<container>	Map container port to host port (e.g., -p 8080:80)
docker run -v <volume>:/path	Mount a volume or directory inside the container
docker start <container>	Start an existing (stopped) container
docker stop <container>	Stop a running container
docker restart <container>	Restart a container
docker rm <container>	Delete a container

🕵️‍♂️ 3. Inspect & Monitor
docker ps	List running containers
docker ps -a	List all containers (including stopped ones)
docker logs <container>	View logs from a container
docker logs -f <container>	Follow logs in real-time (like tail -f)
`docker inspect <container	image>`
docker top <container>	View running processes inside a container
docker stats	Live CPU/memory/network stats for containers

🧳 4. Volumes – Persistent Data
docker volume create <name>	Create a new named volume
docker volume ls	List all volumes
docker volume rm <name>	Remove a named volume
docker volume inspect <name>	Show details about a volume
docker run -v <volume>:/data	Mount volume inside the container

🌐 5. Networking
docker network ls	List all Docker networks
docker network create <name>	Create a custom bridge network
docker network inspect <name>	Show details of a network
docker run --network <name>	Connect a container to a specific network

🛠 6. Docker Compose (Multi-container)
Requires a docker-compose.yml file.
docker-compose up	Start all services
docker-compose up -d	Start services in background
docker-compose down	Stop and remove containers, networks, volumes
docker-compose ps	List running services
docker-compose build	Build or rebuild services

🔁 7. Image Tagging & Pushing to Registry
docker tag <image> <repo>:<tag>	Tag an image for pushing
docker login	Log in to Docker Hub or other registry
docker push <repo>:<tag>	Push image to Docker Hub or custom registry
docker pull <repo>:<tag>	Pull image from Docker Hub or custom registry

🧹 8. Clean-Up Commands
docker system prune	Delete all unused containers, networks, images, and build cache
docker container prune	Remove all stopped containers
docker image prune	Remove unused images
docker volume prune	Remove unused volumes

💡 Helpful Tips
Use --name to make container management easier.

Use -e VAR=value to pass environment variables.

Use .dockerignore to exclude files from builds.

Use docker exec -it <container> bash to get a shell inside a running container.

